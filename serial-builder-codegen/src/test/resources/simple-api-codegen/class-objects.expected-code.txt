byte[] serialData = SimpleSerialBuilder.startSerializableObject()
    .beginClassData("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$ClassWithClassArray", 1L)
        .beginObjectField("classes", "java.lang.Class[]")
            .beginObjectArray("java.lang.Class[]")
                // Code might not create identical class descriptor (though usually does not matter)
                .serializableClass("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$SerializableClass", 1L)
                // Code might not create identical class descriptor (though usually does not matter)
                .enumClass("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$TestEnum")
                // Code might not create identical class descriptor (though usually does not matter)
                .arrayClass("int[]")
                // Code might not create identical class descriptor (though usually does not matter)
                .serializableClass("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$1TestRecord", 0L)
                // Code might not create identical class descriptor (though usually does not matter)
                .proxyClass("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$1TestInterface")
            .endArray()
        .endField()
    .endClassData()
.endObject();
