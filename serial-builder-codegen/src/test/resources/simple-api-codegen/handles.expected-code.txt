Handle handle1 = new Handle();
Handle handle2 = new Handle();
Handle handle3 = new Handle();
Handle handle4 = new Handle();
Handle handle5 = new Handle();
Handle handle6 = new Handle();
Handle handle7 = new Handle();
Handle handle8 = new Handle();
Handle handle9 = new Handle();
Handle handle10 = new Handle();
Handle handle11 = new Handle();
Handle handle12 = new Handle();

byte[] serialData = SimpleSerialBuilder.startSerializableObject()
    .beginClassData("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$ClassWithHandles", 1L)
        .beginObjectField("booleans", "boolean[]")
            .array(handle1, new boolean[] {true})
        .endField()
        .beginObjectField("booleansH", "boolean[]")
            .objectHandle(handle1)
        .endField()
        .beginObjectField("bytes", "byte[]")
            .array(handle2, new byte[] {1})
        .endField()
        .beginObjectField("bytesH", "byte[]")
            .objectHandle(handle2)
        .endField()
        .beginObjectField("chars", "char[]")
            .array(handle3, new char[] {'a'})
        .endField()
        .beginObjectField("charsH", "char[]")
            .objectHandle(handle3)
        .endField()
        .beginObjectField("shorts", "short[]")
            .array(handle4, new short[] {1})
        .endField()
        .beginObjectField("shortsH", "short[]")
            .objectHandle(handle4)
        .endField()
        .beginObjectField("ints", "int[]")
            .array(handle5, new int[] {1})
        .endField()
        .beginObjectField("intsH", "int[]")
            .objectHandle(handle5)
        .endField()
        .beginObjectField("longs", "long[]")
            .array(handle6, new long[] {1L})
        .endField()
        .beginObjectField("longsH", "long[]")
            .objectHandle(handle6)
        .endField()
        .beginObjectField("floats", "float[]")
            .array(handle7, new float[] {1.0f})
        .endField()
        .beginObjectField("floatsH", "float[]")
            .objectHandle(handle7)
        .endField()
        .beginObjectField("doubles", "double[]")
            .array(handle8, new double[] {1.0})
        .endField()
        .beginObjectField("doublesH", "double[]")
            .objectHandle(handle8)
        .endField()
        .beginObjectField("objects", "java.lang.Object[]")
            .beginObjectArray(handle9, "java.lang.String[]")
                .string("test")
            .endArray()
        .endField()
        .beginObjectField("objectsH", "java.lang.Object[]")
            .objectHandle(handle9)
        .endField()
        .beginObjectField("serializable", "java.io.Serializable")
            .beginSerializableObject(handle10)
                .beginClassData("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$SimpleSerializable", 1L)
                .endClassData()
            .endObject()
        .endField()
        .beginObjectField("serializableH", "java.io.Serializable")
            .objectHandle(handle10)
        .endField()
        .beginObjectField("externalizable", "java.io.Externalizable")
            .externalizableObject(handle11, "marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$SimpleExternalizable", 1L, writer -> {
            })
        .endField()
        .beginObjectField("externalizableH", "java.io.Externalizable")
            .objectHandle(handle11)
        .endField()
        .beginObjectField("proxy", "java.lang.Runnable")
            .beginProxyObject(handle12, "java.lang.Runnable")
                .beginSerializableInvocationHandler()
                    .beginClassData("marcono1234.serialization.serialbuilder.SimpleSerialBuilderTest$SimpleInvocationHandler", 1L)
                    .endClassData()
                .endObject()
            .endProxyObject()
        .endField()
        .beginObjectField("proxyH", "java.lang.Runnable")
            .objectHandle(handle12)
        .endField()
    .endClassData()
.endObject();
