byte[] serialData = SimpleSerialBuilder.writeSerializationDataWith(writer -> {
    writer.beginSerializableObject()
        .beginClassData("marcono1234.serialization.serialbuilder.SerialBuilderTest$SimpleSerializableClass", 1L)
            .primitiveIntField("i", 1)
        .endClassData()
    .endObject();
    writer.externalizableObject("marcono1234.serialization.serialbuilder.SerialBuilderTest$ExternalizableClass", 1L, writer2 -> {
        writer2.write(new byte[] {0, 0, 0, 5, 1});
        writer2.string("test");
    });
    writer.beginProxyObject("marcono1234.serialization.serialbuilder.SerialBuilderTest$2InterfaceA", "marcono1234.serialization.serialbuilder.SerialBuilderTest$2InterfaceB")
        .beginSerializableInvocationHandler()
            .beginClassData("marcono1234.serialization.serialbuilder.SerialBuilderTest$SerializableInvocationHandler", 1L)
            .endClassData()
        .endObject()
    .endProxyObject();
});
